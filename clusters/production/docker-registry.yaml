---
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pv-claim
  namespace: docker-registry
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: docker-registry-repo
  namespace: docker-registry
spec:
  interval: 1m0s
  url: https://helm.twun.io
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: docker-registry-release
  namespace: docker-registry
spec:
  chart:
    spec:
      chart: docker-registry
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: docker-registry-repo
      version: 2.2.2
  interval: 1m0s
  values:
    replicaCount: 1
    persistence:
      enabled: true
      size: 20Gi
      deleteEnabled: true
      storageClass: longhorn
      existingClaim: docker-registry-pv-claim
    secrets:
      htpasswd: admin:$2y$05$Ozhlsk1f.wVcjA83YjGL3OwBjiWcf2iBFPMqJK/p6z6/kzGDxAvt.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
  namespace: docker-registry
data:
  config.yaml: |
    tunnel: registry
    credentials-file: /etc/cloudflared/creds/credentials.json
    metrics: 0.0.0.0:2000
    no-autoupdate: true
    ingress:
    - hostname: registry.jimmyding.com
      service: http://docker-registry-release.docker-registry:5000
    - service: http_status:404
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: docker-registry
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:2022.3.0
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: tunnel-credentials-registry
        - name: config
          configMap:
            name: cloudflared
            items:
              - key: config.yaml
                path: config.yaml
